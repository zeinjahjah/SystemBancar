
package bank;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;

import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.LayoutStyle.ComponentPlacement;

/**
 *
 * @author Zen jah
 */
public class Account extends JFrame {

	/**
	 * constructor class Account
	 * 
	 * @param customer_id   Customer ID
	 * @param customer_name Customer Name
	 */
	public Account(String customer_id, String customer_name) {
		this.customer_id = customer_id;
		this.customer_name = customer_name;
		initComponents();
		autoId();
	}

	/**
	 * This method is called from within the constructor to initialize the form. The
	 * content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")

	private void initComponents() {
		jPanel1 = new javax.swing.JPanel();
		jLabel3 = new javax.swing.JLabel();
		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		jLabel7 = new javax.swing.JLabel();
		jLabel8 = new javax.swing.JLabel();
		jButton2 = new javax.swing.JButton();
		jComboBox1 = new javax.swing.JComboBox<>();
		jLabel4 = new javax.swing.JLabel();
		jButton3 = new javax.swing.JButton();

		jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Account"));

		jLabel3.setText("Account type");

		jLabel1.setText("Customer ID");

		jLabel2.setText("Custmer Name");

		jLabel7.setText("Account No");

		jLabel8.setFont(new java.awt.Font("Tahoma", 1, 20));
		jLabel8.setForeground(new java.awt.Color(0, 102, 255));
		jLabel8.setText("jLabel8");

		jButton2.setText("Cancel");
		jButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});

		jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dollar", "Euro", "Lei" }));

		jLabel4.setText("Balance");

		jButton3.setText("Add");
		jButton3.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton3ActionPerformed(evt);
			}
		});

		txtbal = new javax.swing.JTextField();

		txtbal.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {

			}
		});

		lblCustomerid = new JLabel();
		lblCustomerid.setText("customer_id");
		lblCustomerid.setForeground(new Color(0, 102, 255));
		lblCustomerid.setFont(new Font("Tahoma", Font.BOLD, 20));

		lblCustomername = new JLabel();
		lblCustomername.setText("customer_name");
		lblCustomername.setForeground(new Color(0, 102, 255));
		lblCustomername.setFont(new Font("Tahoma", Font.BOLD, 20));

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(Alignment.TRAILING).addGroup(jPanel1Layout
				.createSequentialGroup().addGroup(
						jPanel1Layout.createParallelGroup(Alignment.LEADING)
								.addGroup(
										jPanel1Layout.createSequentialGroup().addContainerGap(248, Short.MAX_VALUE)
												.addComponent(
														jButton3, GroupLayout.PREFERRED_SIZE, 96,
														GroupLayout.PREFERRED_SIZE)
												.addGap(18))
								.addGroup(jPanel1Layout.createSequentialGroup().addGap(41)
										.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING)
												.addComponent(jLabel4).addComponent(jLabel3).addComponent(jLabel2)
												.addComponent(jLabel1).addComponent(jLabel7))
										.addPreferredGap(ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
										.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING)
												.addGroup(jPanel1Layout
														.createSequentialGroup()
														.addComponent(lblCustomername, GroupLayout.PREFERRED_SIZE, 186,
																GroupLayout.PREFERRED_SIZE)
														.addPreferredGap(ComponentPlacement.RELATED))
												.addGroup(
														Alignment.TRAILING,
														jPanel1Layout.createParallelGroup(Alignment.LEADING)
																.addGroup(jPanel1Layout.createSequentialGroup()
																		.addComponent(jLabel8)
																		.addPreferredGap(ComponentPlacement.RELATED))
																.addGroup(Alignment.TRAILING, jPanel1Layout
																		.createParallelGroup(Alignment.LEADING)
																		.addGroup(jPanel1Layout.createSequentialGroup()
																				.addGroup(jPanel1Layout
																						.createParallelGroup(
																								Alignment.LEADING,
																								false)
																						.addComponent(txtbal,
																								GroupLayout.DEFAULT_SIZE,
																								157, Short.MAX_VALUE)
																						.addComponent(
																								jComboBox1, 0,
																								GroupLayout.DEFAULT_SIZE,
																								Short.MAX_VALUE))
																				.addGap(35))
																		.addGroup(jPanel1Layout.createSequentialGroup()
																				.addComponent(lblCustomerid,
																						GroupLayout.DEFAULT_SIZE, 186,
																						Short.MAX_VALUE)
																				.addPreferredGap(
																						ComponentPlacement.RELATED)))))))
				.addComponent(jButton2, GroupLayout.PREFERRED_SIZE, 85, GroupLayout.PREFERRED_SIZE).addContainerGap()));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(Alignment.TRAILING).addGroup(jPanel1Layout
				.createSequentialGroup().addContainerGap(15, Short.MAX_VALUE)
				.addGroup(jPanel1Layout
						.createParallelGroup(Alignment.BASELINE).addComponent(jLabel8).addComponent(jLabel7))
				.addPreferredGap(ComponentPlacement.UNRELATED)
				.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE).addComponent(jLabel1)
						.addComponent(lblCustomerid, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE))
				.addGap(14)
				.addGroup(jPanel1Layout.createParallelGroup(Alignment.TRAILING).addComponent(jLabel2)
						.addComponent(lblCustomername, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE))
				.addPreferredGap(ComponentPlacement.UNRELATED)
				.addGroup(jPanel1Layout.createParallelGroup(Alignment.TRAILING).addComponent(jLabel3).addComponent(
						jComboBox1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
				.addPreferredGap(ComponentPlacement.UNRELATED)
				.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(txtbal, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
								GroupLayout.PREFERRED_SIZE)
						.addComponent(jLabel4))
				.addGap(18)
				.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(jButton2, GroupLayout.PREFERRED_SIZE, 52, GroupLayout.PREFERRED_SIZE)
						.addComponent(jButton3, GroupLayout.PREFERRED_SIZE, 53, GroupLayout.PREFERRED_SIZE))
				.addContainerGap()));
		jPanel1.setLayout(jPanel1Layout);

		homeButton = new JButton("Home");
		homeButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				homeButtonActionPerformed(e);
			}
		});
		homeButton.setForeground(Color.BLACK);
		homeButton.setBackground(new Color(51, 153, 102));

		JLabel lblAccount = new JLabel();
		lblAccount.setText("Account");
		lblAccount.setFont(new Font("Tahoma", Font.BOLD, 36));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		layout.setHorizontalGroup(layout.createParallelGroup(Alignment.LEADING).addGroup(layout.createSequentialGroup()
				.addGap(88)
				.addGroup(layout.createParallelGroup(Alignment.TRAILING, false)
						.addGroup(layout.createSequentialGroup()
								.addComponent(lblAccount, GroupLayout.PREFERRED_SIZE, 185, GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(homeButton))
						.addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
								GroupLayout.PREFERRED_SIZE))
				.addContainerGap(361, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(Alignment.TRAILING)
				.addGroup(layout.createSequentialGroup().addGap(34)
						.addGroup(layout.createParallelGroup(Alignment.TRAILING)
								.addComponent(homeButton, GroupLayout.PREFERRED_SIZE, 37, GroupLayout.PREFERRED_SIZE)
								.addComponent(lblAccount, GroupLayout.PREFERRED_SIZE, 44, GroupLayout.PREFERRED_SIZE))
						.addGap(18).addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, 297, GroupLayout.PREFERRED_SIZE)
						.addContainerGap(49, Short.MAX_VALUE)));
		getContentPane().setLayout(layout);

		pack();
	}

	/**
	 * 'Home' button functionality which returns to the main page.
	 * 
	 * @param evt ActionEvent when clicking on Home button
	 */
	private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {

		MainMenu c = new MainMenu(this.role, this.customer_id, this.customer_name);
		c.permissions(this.role);
		this.hide();
		c.setVisible(true);

	}

	/**
	 * 'Cancel' button functionality which returns to the main page.
	 * 
	 * @param evt ActionEvent when clicking on Cancel button
	 */
	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
		setVisible(false);
		dispose();

	}

	/**
	 * 'Add' button functionality which add new account to the assigned customer.
	 * 
	 * @param evt ActionEvent when clicking on add button
	 * 
	 */
	private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {

		addAccount(false);
	}

	/**
	 * Set Account permissions
	 * 
	 * @param role use or admin, could be determinated after login
	 */
	public void permissions(String role) {
		this.role = role;
		if (role.contentEquals("admin")) {

			homeButton.setVisible(false);
		} else {
			homeButton.setVisible(true);

		}

	}

	/**
	 * Get the Max account ID + 1 for the new created account
	 * 
	 * @return the new ID for new account
	 */
	public String autoId() {
		String result = "";
		try {
			DB_Connector connector = new DB_Connector();
			con1 = connector.getConnection();

			Statement s = con1.createStatement();
			ResultSet rs = s.executeQuery("SELECT MAX(acc_id) FROM account");
			rs.next();
			rs.getString("MAX(acc_id)");
			if (rs.getString("MAX(acc_id)") == null) {
				jLabel8.setText("A0001");
				result = "A0001";
			} else {
				long id = Long
						.parseLong(rs.getString("MAX(acc_id)").substring(2, rs.getString("MAX(acc_id)").length()));
				id++;
				jLabel8.setText("A0" + String.format("%03d", id));
				result = "A0" + String.format("%03d", id);

				lblCustomerid.setText(this.customer_id);
				lblCustomername.setText(this.customer_name);
			}

		} catch (Exception ex) {
			ex.printStackTrace();
		}
		return result;
	}

	/**
	 * set required parameters for adding new account (used for unit tests)
	 * 
	 * @param data1 account ID
	 * @param data2 balance value
	 */
	public void setAccount(String data1, String data2) {

		jLabel8.setText(data1);
		txtbal.setText(data2);

	}

	/**
	 * Add new new account
	 * 
	 * @param test test flag for unit test
	 * @return status of adding a new account
	 */
	public String addAccount(Boolean test) {
		String result = "";

		try {
			result = "done";
			String id = jLabel8.getText();
			String acctype = jComboBox1.getSelectedItem().toString();
			String balance = txtbal.getText();

			DB_Connector connector = new DB_Connector();
			con1 = connector.getConnection();
			insert = con1.prepareStatement("insert into account(acc_id,cust_id,acc_type,balance)values(?,?,?,?)");
			insert.setString(1, id);
			insert.setString(2, this.customer_id);
			insert.setString(3, acctype);
			insert.setString(4, balance);

			insert.executeUpdate();
			if (!test) {
				JOptionPane.showMessageDialog(this, "Account Createdd");
			}
			autoId();
			jComboBox1.setSelectedIndex(-1);
			txtbal.setText("");

			// table_update();

		} catch (Exception e) {
			result = "fail";
			System.out.println("Failed " + e);

		}
		return result;
	}

	/**
	 * Delete an account by account ID
	 * 
	 * @param id account Id
	 * @return status of deleting a new account
	 */
	public String deleteAccount(String id) {
		String result = "fail";
		try {
			DB_Connector connector = new DB_Connector();
			con1 = connector.getConnection();
			Statement s = con1.createStatement();
			s.executeUpdate("DELETE FROM account where acc_id  = \"" + id + "\"");
			result = "done";
		} catch (Exception ex) {
			ex.printStackTrace();
		}
		return result;
	}

	/**
	 * Variables declaration
	 */
	private javax.swing.JButton jButton2;
	private javax.swing.JButton jButton3;
	private javax.swing.JButton homeButton;
	private javax.swing.JComboBox<String> jComboBox1;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JLabel jLabel8;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JLabel lblCustomerid;
	private javax.swing.JLabel lblCustomername;
	private javax.swing.JTextField txtbal;
	private String role = "user";
	private String customer_id;
	private String customer_name;
	private Connection con1;
	private PreparedStatement insert;
	private ResultSet rs1;
}
